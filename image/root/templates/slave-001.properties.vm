engine.name=$envVars["SLAVE_ENGINE"]
group.id=$envVars["SLAVE_GROUP"]
external.id=$envVars["SLAVE_ID"]

registration.url=http://$envVars["HOSTNAME"]:31415/sync/$envVars["MASTER_ENGINE"]-$envVars["MASTER_ID"]

# NOTE: the DB connection details will be replaced by the start script

db.url=$envVars["SLAVE_JDBC"]
db.user=$envVars["SLAVE_USER"]
db.password=$envVars["SLAVE_PASSWORD"]
db.driver=$envVars["SLAVE_JDBC_DRIVER"]

job.purge.period.time.ms=$envVars["JOB_PURGE_PERIOD_TIME_MS"]
job.routing.period.time.ms=$envVars["JOB_ROUTING_PERIOD_TIME_MS"]
job.push.period.time.ms=$envVars["JOB_PUSH_PERIOD_TIME_MS"]
job.pull.period.time.ms=$envVars["JOB_PULL_PERIOD_TIME_MS"]

# Initial load is the process of syncing the data into an empty database
# http://www.symmetricds.org/doc/3.7/html/user-guide.html#_initial_loads
# By default, all data for a given table will be initial loaded in a
# single batch, regardless of the max batch size parameter on the
# reload channel. That is, for a table with one million rows, all rows
# for that table will be initial loaded and sent to the destination
# node in a single batch. For large tables, this can result in a batch
# that can take a long time to extract and load.
#
# Initial loads for a table can be broken into multiple batches by
# setting initial.load.use.extract.job.enabled to true.
#
# To tell SymmetricDS the number of batches to create for a given
# table, specify a positive integer in the initial_load_batch_count
# column on Table Routing.
initial.load.use.extract.job.enabled=true
